@use 'scss/imports' as imports;

.company-name {
  font-weight: bold;
  color: imports.$color_orange;
  > span:first-of-type {
    color: imports.$color_blue;
  }
}

:host {
  .site-container {
    position: relative;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    overflow: hidden;

    background-color: imports.$color_purple_dk;

    .site-background {
      position: absolute;
      height: 84vw;
      max-height: 100vh;
      width: 100%;
      // $maxScreenWidth: 3440px;
      @keyframes clockwise {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      @keyframes counterClockwise {
        0% {
          transform: rotate(360deg);
        }
        100% {
          transform: rotate(0deg);
        }
      }

      .gear {
        position: absolute;
        display: block;
        top: 0;
        left: 0;

        $teeth1: 60;
        $diam1: 62; // mm
        $teeth2: 48;
        $diam2: 51; // mm
        $teeth3: 35;
        $diam3: 37; // mm
        $teeth4: 25;
        $diam4: 27; // mm
        $teeth5: 40;
        $diam5: 42; // mm

        $ratio1to3: $diam3 / $diam1;
        $ratio3to4: $diam4 / $diam3;
        $ratio4to2: $diam2 / $diam4;
        $ratio2to5: $diam5 / $diam2;
        $ratio1to2: $diam2 / $diam1;
        $ratio2to7: $diam5 / $diam2;

        $width1: 50vw;
        $width3: $ratio1to3 * $width1;
        $width4: $ratio3to4 * $width3;
        $width2: $ratio4to2 * $width4;
        $width5: $ratio2to5 * $width2;
        $width6: $ratio1to2 * $width1;
        $width7: $ratio2to7 * $width2;

        // 1 -> 3 -> 4 -> 2 -> 5
        $speed1: 120s; // 62mm
        $speed3: imports.getGearSpeed($speed1, 60, 35); // 37mm
        $speed4: imports.getGearSpeed($speed3, 35, 25);
        $speed2: imports.getGearSpeed($speed4, 25, 48); // 51mm
        $speed5: imports.getGearSpeed($speed2, 48, 40);
        $speed6: imports.getGearSpeed($speed1, 60, 48);
        $speed7: imports.getGearSpeed($speed2, 48, 40);

        // Mesh w/ 3
        &#Gear1 {
          @include imports.gear($width1, -4.65vw, -3.5vw, clockwise, $speed1);
        }
        // Mesh w/ 3 & 5
        &#Gear2 {
          @include imports.gear($width2, -5.5vw, 78vw, counterClockwise, $speed2);
        }
        // Mesh w/ 1 & 4
        &#Gear3 {
          @include imports.gear($width3, 19vw, 42.6vw, counterClockwise, $speed3);
        }
        // Mesh w. 3 & 2
        &#Gear4 {
          @include imports.gear($width4, 28.95vw, 70.3vw, clockwise, $speed4);
        }
        // Mesh w/ 2
        &#Gear5 {
          @include imports.gear($width5, -12.4vw, 47.35vw, clockwise, $speed5);
        }
        // Mesh w/ 2
        &#Gear5 {
          @include imports.gear($width5, -12.4vw, 47.35vw, clockwise, $speed5);
        }
        // Mesh w/ 1 & 7
        &#Gear6 {
          @include imports.gear($width6, 42.7vw, -11.75vw, counterClockwise, $speed6);
        }
        // Mesh w/ 6
        &#Gear7 {
          @include imports.gear($width7, 44vw, 27.75vw, clockwise, $speed7);
        } 
      }

      .site-background-overlay {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-image: linear-gradient(0deg, #080008 10%, transparent);
      }
    }

    header {
      z-index: 1;
      position: relative;
    }

    main {
      z-index: 1;
      flex: 1;
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 2rem;
      background-color: transparent;//imports.$color_black;
      background-image: linear-gradient(0deg, imports.$color_black 50%, transparent);

      img {
        width: 80vw;
        max-width: clamp(200px, 80vw, 1000px);
        @include imports.media-breakpoint-gte(sm) {
          max-width: clamp(200px, 60vw, 1000px);
        }
        @include imports.media-breakpoint-gte(lg) {
          max-width: clamp(200px, 40vw, 1000px);
        }
        background-image: radial-gradient(imports.$color_black, transparent 70%);
      }
      > div {
        max-width: clamp(200px, 80vw, 1000px);
        @include imports.media-breakpoint-gte(sm) {
          max-width: clamp(200px, 60vw, 1000px);
        }
        @include imports.media-breakpoint-gte(lg) {
          max-width: clamp(200px, 40vw, 1000px);
        }
        h1, h2 {
          text-align: center;
        }
        .link-container {
          display: flex;
          justify-content: center;
          margin: clamp(2rem, 2vw, 4rem) 0 clamp(4rem, 4vw, 8rem);
          .email-link {
            display: inline-flex;
            justify-content: center;
            border: 4px dotted imports.$color_pink;
            border-radius: 25%;
            img {
              width: clamp(120px, 10vw, 160px);
              padding: 1rem;
            }
          }
          .fishbone-logo-link {
            position: relative;
            justify-content: center;
            
            img:first-of-type {  
              width: clamp(200px, 12vw, 400px);
            }
          }
        }
      }
    }

    footer {
      z-index: 1;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem;
      background-color: imports.$color_purple_dk;
      position: relative;
      .logo-compact {
        width: clamp(2rem, 6vw, 4rem);
      }
    }
  }
}
